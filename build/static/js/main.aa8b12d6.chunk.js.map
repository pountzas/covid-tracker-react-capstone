{"version":3,"sources":["utils/api/api.js","redux/homeData/covidhome.js","redux/filter/filterLocation.js","redux/details/covidDetails.js","redux/configStore.js","components/NavBar.js","components/CovidComp.js","components/covidHome.js","components/CovidDetails.js","App.js","index.js"],"names":["covidStatsAPI","getStatsByDate","date","Date","year","getFullYear","month","getMonth","day","getDate","getFullDate","fetch","rawResponse","json","data","GET_COVID_STAT","initialState","getCovidStat","dispatch","narrativaAPI","then","res","payload","Object","entries","dates","total","countries","type","FILTER_STATS_BY_LOCATION","value","filtered","filtering","filter","d","today_new_confirmed","FILTER_COVID_STATS","allReducer","combineReducers","covidData","state","action","country","filteredData","store","createStore","applyMiddleware","thunk","NavBar","location","useLocation","history","useHistory","className","pathname","onClick","goBack","CovidComp","props","newConfirmed","to","search","icon","faArrowRight","CovidHome","useDispatch","useSelector","useEffect","length","filterEvent","e","target","dataToUse","randomNum","Math","round","random","onChange","map","CovidDetails","countryName","URLSearchParams","get","filteredCountry","name","today_vs_yesterday","today_vs_yesterday_confirmed","today_confirmed","today_recovered","today_deaths","today_open_cases","today_new_cases","today_new_recovered","today_new_deaths","today_new_open_cases","keys","String","fromCharCode","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa8b12d6.chunk.js","sourcesContent":["const baseurl = 'https://api.covid19tracking.narrativa.com/api';\n\nconst covidStatsAPI = {\n  async getStatsByDate() {\n    const date = new Date();\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate();\n    const getFullDate = `${year}-${month}-${day}`;\n\n    const rawResponse = await fetch(`${baseurl}/${getFullDate}`);\n    const data = await rawResponse.json();\n\n    return data;\n  },\n};\n\nexport default covidStatsAPI;\n","import narrativaAPI from '../../utils/api/api';\n\nconst GET_COVID_STAT = 'GET_COVID_STAT';\n\nconst initialState = [];\n\nexport const getCovidStatReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_COVID_STAT:\n      return action.payload.filter((country) => country[1].today_new_confirmed !== 0);\n    default:\n      return state;\n  }\n};\n\nexport const getCovidStatAction = (payload) => ({\n  type: GET_COVID_STAT,\n  payload,\n});\n\nexport const getCovidStat = () => (dispatch) => {\n  narrativaAPI.getStatsByDate().then((res) => {\n    dispatch(getCovidStatAction(Object.entries(res.dates[res.total.date].countries)));\n  });\n};\n","const FILTER_STATS_BY_LOCATION = 'FILTER_STATS_BY_LOCATION';\n\nconst initialState = {\n  value: 'all',\n  data: [],\n  filtered: [],\n};\n\nconst filtering = (data, value) => {\n  let result;\n  if (value === 'all') {\n    result = data;\n  } else if (value === '0') {\n    result = data.filter((d) => d[1].today_new_confirmed >= 0 && d[1].today_new_confirmed <= 100);\n  } else if (value === '101') {\n    result = data.filter((d) => d[1].today_new_confirmed >= 101 && d[1].today_new_confirmed <= 500);\n  } else if (value === '501') {\n    result = data\n      .filter((d) => d[1].today_new_confirmed >= 501 && d[1].today_new_confirmed <= 1000);\n  } else {\n    result = data.filter((d) => d[1].today_new_confirmed >= 1001);\n  }\n  return result;\n};\n\nexport const filterByLocationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FILTER_STATS_BY_LOCATION:\n      return {\n        value: action.payload.value,\n        data: action.payload.data,\n        filtered: filtering(action.payload.data, action.payload.value),\n      };\n    default:\n      return state;\n  }\n};\n\nexport const filterCovidStats = (payload) => ({\n  type: FILTER_STATS_BY_LOCATION,\n  payload,\n});\n","const FILTER_COVID_STATS = 'FILTER_COVID_STATS';\n\nconst initialState = [];\n\nexport const filterCovidReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FILTER_COVID_STATS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport const filterCovidStats = (payload) => ({\n  type: FILTER_COVID_STATS,\n  payload,\n});\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { getCovidStatReducer } from './homeData/covidhome';\nimport { filterByLocationReducer } from './filter/filterLocation';\nimport { filterCovidReducer } from './details/covidDetails';\n\nconst allReducer = combineReducers({\n  covidData: getCovidStatReducer,\n  filteredData: filterCovidReducer,\n  countries: filterByLocationReducer,\n});\n\nconst store = createStore(allReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst NavBar = () => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return (\n    <>\n      <nav className=\"nav d-flex justify-content-between align-items-center\">\n        {location.pathname === '/details'\n          ? <button type=\"button\" className=\"btn btn-outline-secondary\" onClick={() => history.goBack()}>Home</button>\n          : <div />}\n        <h3 className=\"text-white\">COVID19 STATS</h3>\n        <div />\n      </nav>\n    </>\n  );\n};\n\nexport default NavBar;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons';\n\nconst CovidComp = (props) => {\n  const { country, newConfirmed } = props;\n\n  return (\n    <div key={country} className=\"covid-comp px-2 pt-2\">\n\n      <div className=\"more-icon\">\n        <Link to={{ pathname: '/details', search: `country=${country}` }} className=\"text-white\">\n          <FontAwesomeIcon icon={faArrowRight} />\n        </Link>\n      </div>\n      <div className=\"covid-comp-p pt-4 text-center\">\n        <Link to={{ pathname: '/details', search: `country=${country}` }}>\n          {country}\n        </Link>\n        <p>{newConfirmed}</p>\n      </div>\n    </div>\n  );\n};\n\nCovidComp.propTypes = {\n  country: PropTypes.string.isRequired,\n  newConfirmed: PropTypes.number.isRequired,\n};\n\nexport default CovidComp;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { getCovidStat } from '../redux/homeData/covidhome';\nimport { filterCovidStats } from '../redux/filter/filterLocation';\nimport CovidComp from './CovidComp';\n\nconst CovidHome = () => {\n  const dispatch = useDispatch();\n\n  const data = useSelector((state) => state.covidData);\n  const countries = useSelector((state) => state.countries);\n\n  useEffect(() => {\n    if (data.length === 0) {\n      dispatch(getCovidStat());\n    }\n  }, []);\n\n  const filterEvent = (e) => {\n    dispatch(filterCovidStats({ value: e.target.value, data }));\n  };\n\n  const dataToUse = countries.filtered.length === 0 ? data : countries.filtered;\n  const randomNum = Math.round(Math.random() * dataToUse.length);\n\n  return (\n    <main>\n      <div className=\"\">\n        {\n          dataToUse.length === 0\n            ? null\n            : (\n              <div className=\"hero\">\n                <div className=\"align--items-center\" />\n                <div className=\"hero-section text-white text-center\">\n                  <Link to={{ pathname: '/details', search: `country=${dataToUse[randomNum][0]}` }} className=\"text-white text-uppercase text-decoration-none text-center\">{dataToUse[randomNum][0]}</Link>\n                  <p className=\"font-weight-bolder text-center mt-2\">{`${dataToUse[randomNum][1].today_new_confirmed} Recently confirmed`}</p>\n                </div>\n              </div>\n            )\n        }\n        {\n          dataToUse.length === 0\n            ? null\n            : (\n              <div className=\"search-page my-background d-flex justify-content-between align-content-center\">\n                <p className=\"text-white font-weight-bolder\">Search Filter</p>\n                <select value={countries.value} onChange={(e) => filterEvent(e)} className=\"border select-box my-background text-white\">\n                  <option value=\"all\" className=\"text-info\">filter by no_of_cases</option>\n                  <option value=\"0\">0 - 100</option>\n                  <option value=\"101\">101 - 500</option>\n                  <option value=\"501\">501 - 1000</option>\n                  <option value=\"1000\">1000+</option>\n                </select>\n              </div>\n            )\n        }\n        <div className=\"d-flex flex-wrap\">\n          {dataToUse.map((d) => (\n            <CovidComp\n              key={d[0]}\n              country={d[0]}\n              newConfirmed={d[1].today_new_confirmed}\n            />\n          ))}\n        </div>\n\n      </div>\n    </main>\n  );\n};\n\nexport default CovidHome;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { filterCovidStats } from '../redux/details/covidDetails';\n\nconst CovidDetails = () => {\n  const dispatch = useDispatch();\n  const searchParams = new URLSearchParams(useLocation().search);\n  const countryName = searchParams.get('country');\n  const filteredCountry = useSelector((state) => state.covidData)\n    .filter((country) => country[0] === countryName);\n\n  if (filteredCountry.length !== 0) {\n    dispatch(filterCovidStats({\n      country: filteredCountry[0][1].name,\n      today_vs_yesterday: filteredCountry[0][1].today_vs_yesterday_confirmed,\n      today_confirmed: filteredCountry[0][1].today_confirmed,\n      today_recovered: filteredCountry[0][1].today_recovered,\n      today_deaths: filteredCountry[0][1].today_deaths,\n      today_open_cases: filteredCountry[0][1].today_open_cases,\n      today_new_cases: filteredCountry[0][1].today_new_confirmed,\n      today_new_recovered: filteredCountry[0][1].today_new_recovered,\n      today_new_deaths: filteredCountry[0][1].today_new_deaths,\n      today_new_open_cases: filteredCountry[0][1].today_new_open_cases,\n    }));\n  }\n\n  const country = useSelector((state) => state.filteredData);\n\n  return (\n    <main>\n      <div className=\"details-hero\">\n        <div className=\"\">\n          <h2 className=\"text-white ps-3 font-xlg text-uppercase mt-3\">{countryName}</h2>\n        </div>\n      </div>\n      {\n        Object.keys(country).length === 0\n          ? <div className=\"no-result text-center\">No Result</div>\n          : (\n            <div className=\"details-stat\">\n              <div className=\"\">\n                <p className=\"font-lg ps-3 mb-2 text-white text-info\">{`Today in ${countryName}`}</p>\n              </div>\n              <div>\n                <div className=\"country-item d-flex justify-content-between\">\n                  <p className=\"\">{`TODAY${String.fromCharCode(39)}S NEW CONFIRMED`}</p>\n                  <p>{country.today_new_cases}</p>\n                </div>\n                <div className=\"country-item  d-flex justify-content-between\">\n                  <p>{`TODAY${String.fromCharCode(39)}S NEW RECOVERED`}</p>\n                  <p>{country.today_new_recovered}</p>\n                </div>\n                <div className=\"country-item  d-flex justify-content-between\">\n                  <p>{`TODAY${String.fromCharCode(39)}S NEW DEATHS`}</p>\n                  <p>{country.today_new_deaths}</p>\n                </div>\n                <div className=\"country-item  d-flex justify-content-between\">\n                  <p>{`TODAY${String.fromCharCode(39)}S NEW OPEN CASES`}</p>\n                  <p>{country.today_new_deaths}</p>\n                </div>\n                <div className=\"country-item  d-flex justify-content-between\">\n                  <p>TOTAL CASES</p>\n                  <p>{country.today_confirmed}</p>\n                </div>\n                <div className=\"country-item  d-flex justify-content-between\">\n                  <p>TOTAL RECOVERED</p>\n                  <p>{country.today_recovered}</p>\n                </div>\n                <div className=\"country-item  d-flex justify-content-between\">\n                  <p>TOTAL DEATHS</p>\n                  <p>{country.today_deaths}</p>\n                </div>\n                <div className=\"country-item  d-flex justify-content-between\">\n                  <p>TOTAL OPEN CASES</p>\n                  <p>{country.today_open_cases}</p>\n                </div>\n              </div>\n            </div>\n          )\n      }\n    </main>\n  );\n};\n\nexport default CovidDetails;\n","import './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport CovidHome from './components/covidHome';\nimport CovidDetails from './components/CovidDetails';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <CovidHome />\n          </Route>\n          <Route path=\"/details\">\n            <CovidDetails />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/configStore';\nimport App from './App';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}